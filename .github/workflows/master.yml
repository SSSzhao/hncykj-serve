# This is a basic workflow to help you get started with Actions

name: Build and Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [master]
    tags:
      - 'v*'
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@master

      # - name: Install and Build
      #   run: |
      #     npm install
      #     npm run build

      # # 账号密码验证
      # - name: Deploy
      #   uses: kostya-ten/ssh-server-deploy@v4
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     port: ${{ secrets.SSH_PORT }}
      #     username: ${{ secrets.SSH_USERNAME }}
      #     password: ${{ secrets.SSH_PASSWORD }}
      #     scp_source: 'dist/'
      #     scp_target: ${{ secrets.SSH_TARGET }}
      # 第二步：打包构建
      - name: Build
        uses: actions/setup-node@master
      - run: npm install # 安装第三方包
      - run: npm run build # 打包
      - run: tar -zcvf release.tar.gz dist package.json

      # 第三步：发布 Release
      - name: Create Release # 创建Release， 可以在仓库看到一个个版本
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.SSH_TOKEN }} # 之前GitHub添加的Token
        with:
          tag_name: ${{ github.ref }} # (tag)标签名称
          release_name: Release ${{ github.ref }}
          draft: false # 是否是草稿
          prerelease: false # 是否是预发布

      # 第四步：上传构建结果到 Release（把打包的tar.gz上传到Release）
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.SSH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
          asset_path: ./release.tar.gz # 要上传文件
          asset_name: release.tar.gz # 上传后的文件名
          asset_content_type: application/x-tar

      # 第五步：部署到服务器
      - name: Deploy
        uses: appleboy/ssh-action@master # 使用ssh链接服务器
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script:
            | # 执行命令（运行到服务器）cd：要确保服务器有这个目录； wget：下载上一步的release到服务器； tar：解压； 安装依赖；启动服务
            cd /home/hncykj/serve
            wget https://github.com/SSSzhao/hncykj-serve/releases/latest/download/release.tar.gz -O release.tar.gz
            tar zxvf release.tar.gz
            npm install
        # pm2 reload pm2.config.json
